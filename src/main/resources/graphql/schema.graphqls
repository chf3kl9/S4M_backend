type Query {
    users: [User]
    user(id:Int, email:String): User

    genres: [Genre]
    genre(id:Int!): Genre

    movies: [Movie]
    movie(id:Int!): Movie
}

type Mutation {
    createUser(email:String!, isAdmin:Boolean): User
    deleteUserById(id:Int!, email:String!): String
    updateUserById(id:Int!, email:String!, isAdmin:Boolean): User

    addMovieToFavorites(email:String!, movieId:Int!): String
    addMovieToWatchlist(email:String!, movieId:Int!): String
    removeMovieFromFavorites(email:String!, movieId:Int!): String
    removeMovieFromWatchlist(email:String!, movieId:Int!): String

    placeComment(email:String!, movieId:Int!, text:String!): String
    deleteCommentById(id:Int, email:String): String
    rateMovie(email:String!, movieId:Int!, rating:Int!): String

    createGenre(name:String!, email:String): Genre
    deleteGenreById(id:Int!, email:String): String
    updateGenreById(id:Int!, name:String!, email:String): Genre

    createMovie(title:String!, description:String!, link:String!, imageURL:String!, genreIds:String, email:String): Movie
    deleteMovieById(id:Int!, email:String): String
    updateMovieById(id:Int!, title:String!, description:String!, link:String!, imageURL:String!, addedGenreIds:String, removedGenreIds:String, email:String): Movie

    addGenreToMovie(movieId:Int!, genreId:Int!, email:String): String
    removeGenreFromMovie(movieId:Int!, genreId:Int!, email:String): String
}